on:
  workflow_dispatch:
    # inputs:
    #   app:
    #     description: 'App'
    #     type: choice
    #     options:
    #       - exam
    #       - account
    #     required: true
    inputs: # Example inputs
      exam:
        description: "FE: Exam App"
        type: boolean
      account:
        description: "FE: Account App"
        type: boolean
jobs:
  # apps-to-deploy:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     apps: ${{ steps.get-apps.outputs.apps }}
  #   steps:
  #     - name: Stage check
  #       id: get-apps
  #       run: |
  #         if [ ${{ startsWith(github.ref, 'refs/tags/v') }} = true ]; then
  #           echo "apps=exam" >> $GITHUB_OUTPUT
  #         else
  #           echo "apps=${{ github.event.inputs.app }}" >> $GITHUB_OUTPUT
  #         fi
  apps-to-deploy:
    runs-on: ubuntu-latest
    outputs:
      selected: ${{ steps.get-selected.outputs.selected }}
      tag-check-passed: ${{ steps.check-tag.outputs.tag-check-passed }}
    steps:
      - uses: actions/checkout@v4
      - name: Fetch all tags
        run: git fetch --depth=1 --tags
      - name: Check if HEAD is tagged with a production-ready tag
        id: check-tag
        run: |
          if git describe --tags --abbrev=0 --match 'v*' --exclude '*-rc*' --exact-match HEAD; then
            echo "found"
            echo "tag-check-passed=true" >> $GITHUB_OUTPUT
          else
            echo "not found"
            echo "tag-check-passed=false" >> $GITHUB_OUTPUT
          fi
      - name: Get Selected
        id: get-selected
        uses: joao-zanutto/get-selected@v1.1.1
        with:
          separator: ","
  deploy-prod:
    runs-on: ubuntu-latest
    needs: apps-to-deploy
    steps:
      - run: |
          echo "${{ needs.apps-to-deploy.outputs.tag-check-passed }}"
          echo "${{ needs.apps-to-deploy.outputs.selected }}"
    # if: github.ref == 'refs/heads/main'
    # secrets: inherit
    # uses: ./.github/workflows/_deploy.yml
    # with:
    #   environment: dev-${{ github.event.inputs.app }}
    #   dir: apps/${{ needs.apps-to-deploy.outputs.apps }} #apps/${{ github.event.inputs.app }}
